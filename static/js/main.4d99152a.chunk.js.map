{"version":3,"sources":["logo.svg","ListItems.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ListItems","props","items","map","item","className","key","id","onClick","selectItems","name","job","birth","firedValue","gender","deleteItems","updateItems","App","state","fired","bind","handleInput","handleCheck","addItem","console","log","e","this","setState","target","value","Date","now","checked","document","getElementById","textContent","preventDefault","newItem","newItems","updatedElements","filter","ll","n","i","length","style","background","onSubmit","type","required","onChange","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"gLAAAA,EAAOC,QAAU,IAA0B,kC,uLCkC5BC,MA9Bf,SAAmBC,GACf,IAIMD,EAJQC,EAAMC,MAIIC,KAAK,SAAAC,GAGzB,OAAO,6BAEN,2BAAOC,UAAY,OAAOC,IAAOF,EAAKE,IAAKC,GAAK,gBAC/C,+BACI,wBAAIA,GAAMH,EAAKE,IAAKE,QAAW,kBAAMP,EAAMQ,YAAYL,EAAKE,OAC1D,4BAAKF,EAAKM,MACV,4BAAKN,EAAKO,IAAV,KACA,4BAAKP,EAAKQ,MAAV,KACA,gCAAMR,EAAKS,YACX,4BAAKT,EAAKU,OAAV,MAEA,4BAAQP,GAAK,SAASC,QAAW,kBAAKP,EAAMc,YAAYX,EAAKE,OAA7D,qFACA,4BAAQC,GAAK,OAAOC,QAAW,kBAAKP,EAAMe,YAAYZ,EAAKE,OAA3D,kDAZD,QAiBX,OACI,iCAAON,EAAP,MC0IOiB,E,kDAlKZ,WAAahB,GAAO,IAAD,8BACnB,cAAMA,IACDiB,MAAQ,CACVhB,MAAO,GACNQ,KAAM,GACNC,IAAK,6CACLC,MAAO,GACPO,OAAO,EACPL,OAAQ,OACRR,IAAK,GACLO,WAAY,qDAEhB,EAAKG,YAAc,EAAKA,YAAYI,KAAjB,gBACpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKL,YAAc,EAAKA,YAAYK,KAAjB,gBACnB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBACnB,EAAKX,YAAc,EAAKA,YAAYW,KAAjB,gBACnB,EAAKP,WAAa,EAAKA,WAAWO,KAAhB,gBAClB,EAAKG,QAAU,EAAKA,QAAQH,KAAb,gBAlBK,E,uDAoBVd,GACTkB,QAAQC,IAAI,S,kCAEFC,GAAG,IAAD,EACZC,KAAKC,UAAL,mBACIF,EAAEG,OAAOnB,KAAOgB,EAAEG,OAAOC,OAD7B,oBAEQC,KAAKC,OAFb,0BAGa,GAHb,M,kCAMUN,GAEVC,KAAKC,SAAL,eACGF,EAAEG,OAAOnB,KAAOgB,EAAEG,OAAOI,Y,8BAKrBP,GACPQ,SAASC,eAAe,OAAOC,YAAc,mDAC5CV,EAAEW,iBACF,IAAMC,EAAUX,KAAKT,MACrBM,QAAQC,IAAIa,GACTX,KAAKT,MAAMC,MAAQQ,KAAKT,MAAML,WAAa,uCAAec,KAAKT,MAAML,WAAa,oDAEpF,IAAM0B,EAAQ,sBAAOZ,KAAKT,MAAMhB,OAAlB,CAAyBoC,IAExCX,KAAKC,SAAS,CACZ1B,MAAOqC,EACP7B,KAAM,GACNC,IAAK,6CACLC,MAAO,GACPO,OAAO,EACPL,OAAQ,OACRD,WAAY,oDACZP,IAAKyB,KAAKC,U,kCAKJ1B,GAET,IAAMkC,EAAkBb,KAAKT,MAAMhB,MAAMuC,QAAQ,SAAArC,GAAI,OAAIA,EAAKE,MAAQA,KACvEqB,KAAKC,SAAS,CACb1B,MAAOsC,M,kCAGGlC,GACX,IAAMkC,EAAkBb,KAAKT,MAAMhB,MAAMuC,QAAQ,SAAArC,GAAI,OAAIA,EAAKE,MAAQA,KACtEkB,QAAQC,IAAIe,GACZb,KAAKC,SAAS,CACf1B,MAAOsC,IAEab,KAAKT,MAIvB,IAJD,IACIwB,EAAKf,KAAKT,MAAMhB,MAChByC,EAAI,EAECC,GADGV,SAASC,eAAe7B,GACvB,GAAIsC,EAAGF,EAAGG,OAAQD,IACzBF,EAAGE,GAAGtC,MAAQA,IAAMqC,EAAIC,GAC5BjB,KAAKT,MAAQwB,EAAGC,GAEfhB,KAAKC,SAAS,CACblB,KAAOgC,EAAGC,GAAGjC,KACfC,IAAM+B,EAAGC,GAAGhC,IACZC,MAAO8B,EAAGC,GAAG/B,MACbC,WAAY6B,EAAGC,GAAG9B,WAClBC,OAAQ4B,EAAGC,GAAG7B,OACdR,IAAKyB,KAAKC,MACVb,MAAOuB,EAAGC,GAAGxB,QAEbe,SAASC,eAAe,OAAOC,YAAc,kH,kCAMnC9B,GACG4B,SAASC,eAAe7B,GAChCwC,MAAMC,WAAY,iB,+BAIzB,OAGE,yBAAK1C,UAAY,OAEjB,0BAAME,GAAK,gBAAgByC,SAAYrB,KAAKJ,SAGtC,4BAAQlB,UAAY,YAAYE,GAAK,MAAM0C,KAAO,UAAlD,sDAEN,2BAAO5C,UAAW,SAChB,+BACA,4BACC,kDACA,sFACA,yGACA,qEACA,oDAGD,+BACA,4BAEI,4BACE,2BAAOE,GAAK,OAAO0C,KAAO,OAAOvC,KAAO,OAAOwC,UAAQ,EACvDpB,MAASH,KAAKT,MAAMR,KACpByC,SAAYxB,KAAKN,eAEnB,4BACA,4BAAQX,KAAO,MAAOoB,MAASH,KAAKT,MAAMP,IAAKJ,GAAK,OAChD4C,SAAYxB,KAAKN,aACjB,4BAAQS,MAAQ,8CAAhB,gDACA,4BAAQA,MAAQ,wCAAhB,0CACA,4BAAQA,MAAQ,kCAAhB,oCACA,4BAAQA,MAAQ,wCAAhB,0CACA,4BAAQA,MAAQ,yIAAhB,uIAKJ,4BAAI,2BAAOmB,KAAO,OAAOvC,KAAO,QAASoB,MAASH,KAAKT,MAAMN,MAC3DuC,SAAYxB,KAAKN,eAEnB,4BAAI,2BAAOX,KAAO,QAAQuC,KAAO,WAAWhB,QAAWN,KAAKT,MAAMC,MAAOgC,SAAYxB,KAAKL,eAC1F,wCAAS,2BAAO2B,KAAO,QAAQvC,KAAO,SAAUoB,MAAQ,OAAOG,QAAiC,SAAtBN,KAAKT,MAAMJ,OAAmBqC,SAAYxB,KAAKN,cAAzH,UACQ,2BAAO4B,KAAO,QAAQvC,KAAO,SAAUoB,MAAQ,SAAUG,QAAiC,WAAtBN,KAAKT,MAAMJ,OAAsBqC,SAAYxB,KAAKN,mBAQrI,kBAAC,EAAD,CAAWnB,MAASyB,KAAKT,MAAMhB,MAAQc,YAAeW,KAAKX,YAAaP,YAAekB,KAAKlB,YAAaM,YAAeY,KAAKZ,mB,GA5J7GqC,IAAMC,WCOLC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF3B,SAASC,eAAe,SDyHpB,kBAAmB2B,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7C,QAAQ6C,MAAMA,EAAMC,c","file":"static/js/main.4d99152a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport './ListItems.css'\r\n\r\n\r\nfunction ListItems(props){\r\n    const items = props.items;\r\n \r\n    \r\n    \r\n    const ListItems = items.map( item =>\r\n    {\r\n        \r\n        return(<div>\r\n          \r\n         <table className = \"list\" key = {item.key} id = \"employeeList\">\r\n          <tbody>  \r\n              <tr id = {item.key} onClick = {() => props.selectItems(item.key)}> \r\n                <td>{item.name}</td> \r\n                <td>{item.job} </td>\r\n                <td>{item.birth} </td>\r\n                <td> {item.firedValue}</td>\r\n                <td>{item.gender} </td>\r\n              </tr>  \r\n                <button id = \"delete\" onClick = {()=> props.deleteItems(item.key)}> удалить запись </button>  \r\n                <button id = \"edit\" onClick = {()=> props.updateItems(item.key)}> править </button>\r\n          </tbody> \r\n         </table> </div>)\r\n         \r\n    })\r\n    return (\r\n        <div> {ListItems} </div>\r\n       \r\n       )\r\n}\r\nexport default ListItems;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ListItems from './ListItems'\n\nclass  App extends React.Component {\n   constructor (props){\n   super(props);\n   this.state = {   \n      items: [],            \n       name: '',      \n       job: 'уборщик',\n       birth: '',\n       fired: false,\n       gender: \"Male\",  \n       key: ''  ,\n       firedValue: \"не уволен\"    \n   }\n   this.updateItems = this.updateItems.bind(this)\n  this.handleInput = this.handleInput.bind(this);\n  this.deleteItems = this.deleteItems.bind(this);\n  this.handleCheck = this.handleCheck.bind(this);\n  this.selectItems = this.selectItems.bind(this);\n  this.firedValue = this.firedValue.bind(this);\n  this.addItem = this.addItem.bind(this);\n  }\n firedValue(key){\n   console.log(\"lol\")\n }\n handleInput(e){\n   this.setState({                       \n      [e.target.name]: e.target.value,  \n      key: Date.now()   ,\n      selected: false    \n   })\n }\n handleCheck(e) {\n  \n   this.setState({\n     [e.target.name]: e.target.checked,\n     \n   }) \n }\n \n addItem (e) {\n   document.getElementById(\"add\").textContent = \"добавить\"\n    e.preventDefault();\n    const newItem = this.state;\n    console.log(newItem);\n    if(this.state.fired) {this.state.firedValue = \"уволен\"} else this.state.firedValue = \"не уволен\"\n  \n     const newItems = [...this.state.items, newItem];\n    \n    this.setState({\n      items: newItems,\n      name: '',      \n      job: 'уборщик',\n      birth: '',\n      fired: false,\n      gender: \"Male\", \n      firedValue: \"не уволен\",\n      key: Date.now()\n    })\n  \n }\n \ndeleteItems(key)  {\n\n   const updatedElements = this.state.items.filter (item => item.key !== key);\n  this.setState({\n   items: updatedElements\n  })\n}\n updateItems(key){\n  const updatedElements = this.state.items.filter (item => item.key !== key);\n  console.log(updatedElements)\n  this.setState({\n items: updatedElements\n})\n  var currentItems = this.state\n  var ll = this.state.items\n  var n = 0 ;\n   var myLi = document.getElementById(key)  \n   for(var i = 0 ; i< ll.length; i++ )\n    if (ll[i].key === key) {n = i }\n    this.state = ll[n]\n   \n     this.setState({\n      name : ll[n].name, \n    job : ll[n].job, \n    birth :ll[n].birth,\n    firedValue: ll[n].firedValue,\n    gender: ll[n].gender,\n    key: Date.now(),\n    fired: ll[n].fired\n    })\n    document.getElementById(\"add\").textContent = \"Сохранить изменения\"\n    //console.log(this.state)\n    \n           \n }\n  \n  selectItems(key){\n    const myLi = document.getElementById(key)\n    myLi.style.background= \"MediumOrchid\"  \n    \n }\n  render () {\n  return (\n\n    \n    <div className = \"app\">\n      \n    <form id = \"employee-form\" onSubmit = {this.addItem}>\n      \n          \n          <button className = \"addButton\" id = \"add\" type = \"submit\"> Добавить </button>\n        \n    <table className =\"table\">\n      <tbody> \n      <tr>\n       <th>ФИО</th>\n       <th>Должность</th>\n       <th>Дата рождения</th>\n       <th>Уволен?</th>\n       <th>Пол</th>\n      </tr>\n      </tbody>\n      <tbody>\n      <tr>\n        \n          <td>\n            <input id = \"name\" type = \"text\" name = \"name\" required\n            value = {this.state.name}\n            onChange = {this.handleInput}  />\n          </td>\n          <td> \n          <select name = \"job\"  value = {this.state.job} id = \"jobs\"\n              onChange = {this.handleInput}> \n              <option value = \"уборщик\"> уборщик </option>\n              <option value = \"курьер\"> курьер </option>\n              <option value = \"повар\"> повар </option>\n              <option value = \"сторож\"> сторож </option>\n              <option value = \"системный администратор\"> системный админстратор </option>\n              \n          </select>\n           \n          </td> \n          <td><input type = \"Date\" name = \"birth\"  value = {this.state.birth}\n            onChange = {this.handleInput}/> \n          </td>\n          <td><input name = \"fired\" type = \"checkbox\" checked = {this.state.fired} onChange = {this.handleCheck} /></td>\n          <td >  М <input type = \"radio\" name = \"gender\"  value = \"Male\" checked = {this.state.gender === \"Male\"} onChange = {this.handleInput}/> \n                Ж <input type = \"radio\" name = \"gender\"  value = \"Female\"  checked = {this.state.gender === \"Female\"}  onChange = {this.handleInput}/>\n          </td>\n       \n      </tr>\n      </tbody>\n    </table>  \n    </form>\n     \n   <ListItems items = {this.state.items}  updateItems = {this.updateItems} selectItems = {this.selectItems} deleteItems = {this.deleteItems}></ListItems>\n  </div>\n\n  );\n}\n }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}